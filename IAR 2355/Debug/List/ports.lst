###############################################################################
#
# IAR C/C++ Compiler V7.12.3.989/W32 for MSP430           21/Mar/2021  15:31:49
# Copyright 1996-2019 IAR Systems AB.
# PC-locked license - IAR Embedded Workbench for MSP430, 8K KickStart Edition 7.12
#
#    __rt_version  =  3
#    __double_size =  32
#    __reg_r4      =  free
#    __reg_r5      =  free
#    __pic         =  no
#    __core        =  430X
#    __data_model  =  small
#    __code_model  =  large
#    Source file   =  
#        C:\Users\darri\OneDrive\Desktop\Spring 2021\ECE 484\local Git
#        BP\Basestation_Protocol\ports.c
#    Command line  =  
#        -f C:\Users\darri\AppData\Local\Temp\EW994D.tmp
#        ("C:\Users\darri\OneDrive\Desktop\Spring 2021\ECE 484\local Git
#        BP\Basestation_Protocol\ports.c" -lC
#        "C:\Users\darri\OneDrive\Desktop\Spring 2021\ECE 484\local Git
#        BP\Basestation_Protocol\Debug\List" -o
#        "C:\Users\darri\OneDrive\Desktop\Spring 2021\ECE 484\local Git
#        BP\Basestation_Protocol\Debug\Obj" --no_cse --no_unroll --no_inline
#        --no_code_motion --no_tbaa --debug -D__MSP430FR2355__ -e --double=32
#        --dlib_config "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        8.0\430\lib\dlib\dl430xlsfn.h" -I ./\ --core=430X --data_model=small
#        -On --multiplier=32 --hw_workaround=CPU40 --code_model=large)
#    Locale        =  English_USA.1252
#    List file     =  
#        C:\Users\darri\OneDrive\Desktop\Spring 2021\ECE 484\local Git
#        BP\Basestation_Protocol\Debug\List\ports.lst
#    Object file   =  
#        C:\Users\darri\OneDrive\Desktop\Spring 2021\ECE 484\local Git
#        BP\Basestation_Protocol\Debug\Obj\ports.r43
#
###############################################################################

C:\Users\darri\OneDrive\Desktop\Spring 2021\ECE 484\local Git BP\Basestation_Protocol\ports.c
      1          #include "macros.h" 
      2          #include "functions.h" 
      3          #include "msp430.h" 

   \                                 In  segment DATA16_AN, at 0x202
   \   union <unnamed> _A_PAOUT_L
   \                     _A_PAOUT_L:
   \   000000                DS8 2

   \                                 In  segment DATA16_AN, at 0x204
   \   union <unnamed> _A_PADIR_L
   \                     _A_PADIR_L:
   \   000000                DS8 2

   \                                 In  segment DATA16_AN, at 0x206
   \   union <unnamed> _A_PAREN_L
   \                     _A_PAREN_L:
   \   000000                DS8 2

   \                                 In  segment DATA16_AN, at 0x20a
   \   union <unnamed> _A_PASEL0_L
   \                     _A_PASEL0_L:
   \   000000                DS8 2

   \                                 In  segment DATA16_AN, at 0x20c
   \   union <unnamed> _A_PASEL1_L
   \                     _A_PASEL1_L:
   \   000000                DS8 2

   \                                 In  segment DATA16_AN, at 0x218
   \   union <unnamed> _A_PAIES_L
   \                     _A_PAIES_L:
   \   000000                DS8 2

   \                                 In  segment DATA16_AN, at 0x21a
   \   union <unnamed> _A_PAIE_L
   \                     _A_PAIE_L:
   \   000000                DS8 2

   \                                 In  segment DATA16_AN, at 0x21c
   \   union <unnamed> _A_PAIFG_L
   \                     _A_PAIFG_L:
   \   000000                DS8 2

   \                                 In  segment DATA16_AN, at 0x222
   \   union <unnamed> _A_PBOUT_L
   \                     _A_PBOUT_L:
   \   000000                DS8 2

   \                                 In  segment DATA16_AN, at 0x224
   \   union <unnamed> _A_PBDIR_L
   \                     _A_PBDIR_L:
   \   000000                DS8 2

   \                                 In  segment DATA16_AN, at 0x226
   \   union <unnamed> _A_PBREN_L
   \                     _A_PBREN_L:
   \   000000                DS8 2

   \                                 In  segment DATA16_AN, at 0x22a
   \   union <unnamed> _A_PBSEL0_L
   \                     _A_PBSEL0_L:
   \   000000                DS8 2

   \                                 In  segment DATA16_AN, at 0x22c
   \   union <unnamed> _A_PBSEL1_L
   \                     _A_PBSEL1_L:
   \   000000                DS8 2

   \                                 In  segment DATA16_AN, at 0x238
   \   union <unnamed> _A_PBIES_L
   \                     _A_PBIES_L:
   \   000000                DS8 2

   \                                 In  segment DATA16_AN, at 0x23a
   \   union <unnamed> _A_PBIE_L
   \                     _A_PBIE_L:
   \   000000                DS8 2

   \                                 In  segment DATA16_AN, at 0x23c
   \   union <unnamed> _A_PBIFG_L
   \                     _A_PBIFG_L:
   \   000000                DS8 2

   \                                 In  segment DATA16_AN, at 0x242
   \   union <unnamed> _A_PCOUT_L
   \                     _A_PCOUT_L:
   \   000000                DS8 2

   \                                 In  segment DATA16_AN, at 0x244
   \   union <unnamed> _A_PCDIR_L
   \                     _A_PCDIR_L:
   \   000000                DS8 2

   \                                 In  segment DATA16_AN, at 0x24a
   \   union <unnamed> _A_PCSEL0_L
   \                     _A_PCSEL0_L:
   \   000000                DS8 2

   \                                 In  segment DATA16_AN, at 0x24c
   \   union <unnamed> _A_PCSEL1_L
   \                     _A_PCSEL1_L:
   \   000000                DS8 2
      4          

   \                                 In  segment CODE, align 2
      5          void Init_Ports(void){
   \                     Init_Ports:
      6          Init_Port1();
   \   000000   ........     CALLA   #Init_Port1
      7          Init_Port2();
   \   000004   ........     CALLA   #Init_Port2
      8          Init_Port3(USE_GPIO);
   \   000008   0C43         MOV.W   #0x0, R12
   \   00000A   ........     CALLA   #Init_Port3
      9          Init_Port4();
   \   00000E   ........     CALLA   #Init_Port4
     10          Init_Port5();
   \   000012   ........     CALLA   #Init_Port5
     11          Init_Port6();
   \   000016   ........     BRA     #Init_Port6
     12          }
     13          
     14          

   \                                 In  segment CODE, align 2
     15          void Init_Port1(void){
   \                     Init_Port1:
     16          //-------------------------------------------------------
     17          // RED_LED (0x01) // 0 RED LED 0
     18          // A1_SEEED (0x02) // 1 A1_SEEED
     19          // V_DETECT_L (0x04) // 2 A2
     20          // V_DETECT_R (0x08) // 3 A3
     21          // V_BAT (0x10) // 4 A4
     22          // V_THUMB (0x20) // 5 A5
     23          // UCA0TXD (0x40) // 6 Back Channel UCA0TXD
     24          // UCA0RXD (0x80) // 7 Back Channel UCA0RXD
     25          //-------------------------------------------------------
     26           P1DIR = 0xFF; // Set P1 direction to output
   \   000000   F2430402     MOV.B   #0xff, &0x204
     27           P1OUT = 0x00; // P1 set Low
   \   000004   C2430202     MOV.B   #0x0, &0x202
     28           P1SEL0 &= ~RED_LED; // Set RED_LED as GP I/O
   \   000008   D2C30A02     BIC.B   #0x1, &0x20a
     29           P1SEL1 &= ~RED_LED; // Set RED_LED as GP I/O
   \   00000C   D2C30C02     BIC.B   #0x1, &0x20c
     30           P1OUT |= RED_LED; // Set Red LED On
   \   000010   D2D30202     BIS.B   #0x1, &0x202
     31           P1DIR |= RED_LED; // Set Red LED to output
   \   000014   D2D30402     BIS.B   #0x1, &0x204
     32           P1SEL0 |= A1_SEEED; // ADC input for A1_SEEED
   \   000018   E2D30A02     BIS.B   #0x2, &0x20a
     33           P1SEL1 |= A1_SEEED; // ADC input for A1_SEEED
   \   00001C   E2D30C02     BIS.B   #0x2, &0x20c
     34           P1SEL0 |= V_DETECT_L; // ADC input for V_DETECT_L
   \   000020   E2D20A02     BIS.B   #0x4, &0x20a
     35           P1SEL1 |= V_DETECT_L; // ADC input for V_DETECT_L
   \   000024   E2D20C02     BIS.B   #0x4, &0x20c
     36           P1SEL0 |= V_DETECT_R; // ADC input for V_DETECT_R
   \   000028   F2D20A02     BIS.B   #0x8, &0x20a
     37           P1SEL1 |= V_DETECT_R; // ADC input for V_DETECT_R
   \   00002C   F2D20C02     BIS.B   #0x8, &0x20c
     38           P1SEL0 |= V_BAT; // ADC input for V_BAT
   \   000030   E2D30A02     BIS.B   #0x2, &0x20a
     39           P1SEL1 |= V_BAT; // ADC input for V_BAT
   \   000034   E2D30C02     BIS.B   #0x2, &0x20c
     40           P1SEL0 |= V_THUMB; // ADC input for V_THUMB
   \   000038   F2D020000A02 BIS.B   #0x20, &0x20a
     41           P1SEL1 |= V_THUMB; // ADC input for V_THUMB
   \   00003E   F2D020000C02 BIS.B   #0x20, &0x20c
     42           P1SEL0 |= UCA0TXD; // UCA0TXD pin
   \   000044   F2D080000A02 BIS.B   #0x80, &0x20a
     43           P1SEL1 &= ~UCA0TXD; // UCA0TXD pin
   \   00004A   F2C080000C02 BIC.B   #0x80, &0x20c
     44           P1SEL0 |= UCA0RXD; // UCA0RXD pin
   \   000050   F2D040000A02 BIS.B   #0x40, &0x20a
     45           P1SEL1 &= ~UCA0RXD; // UCA0RXD pin
   \   000056   F2C040000C02 BIC.B   #0x40, &0x20c
     46           //----------------------------------------------------
     47          }
   \   00005C   1001         RETA
   \   00005E                REQUIRE _A_PADIR_L
   \   00005E                REQUIRE _A_PAOUT_L
   \   00005E                REQUIRE _A_PASEL0_L
   \   00005E                REQUIRE _A_PASEL1_L
     48          
     49          //==============================================================================
     50          //==============================================================================

   \                                 In  segment CODE, align 2
     51          void Init_Port2(void){
   \                     Init_Port2:
     52          P2DIR = def_out; // Set P1 direction to output
   \   000000   F2430502     MOV.B   #0xff, &0x205
     53          P2OUT = def_low; // P1 set Low
   \   000004   C2430302     MOV.B   #0x0, &0x203
     54          
     55          P2SEL0 &= ~P2_0; // P2_0 GPIO operation
   \   000008   D2C30B02     BIC.B   #0x1, &0x20b
     56          P2SEL1 &= ~P2_0; // P2_0 GPIO operation
   \   00000C   D2C30D02     BIC.B   #0x1, &0x20d
     57          P2DIR &= ~P2_0; // Direction = input
   \   000010   D2C30502     BIC.B   #0x1, &0x205
     58          
     59          P2SEL0 &= ~P2_1; // P2_1 GPIO operation
   \   000014   E2C30B02     BIC.B   #0x2, &0x20b
     60          P2SEL1 &= ~P2_1; // P2_1 GPIO operation
   \   000018   E2C30D02     BIC.B   #0x2, &0x20d
     61          P2DIR &= ~P2_1; // Direction = input
   \   00001C   E2C30502     BIC.B   #0x2, &0x205
     62          
     63          P2SEL0 &= ~P2_2; // P2_2 GPIO operation
   \   000020   E2C20B02     BIC.B   #0x4, &0x20b
     64          P2SEL1 &= ~P2_2; // P2_2 GPIO operation
   \   000024   E2C20D02     BIC.B   #0x4, &0x20d
     65          P2DIR &= ~P2_2; // Direction = input
   \   000028   E2C20502     BIC.B   #0x4, &0x205
     66          
     67          P2SEL0 &= ~SW2; // SW2 Operation
   \   00002C   F2C20B02     BIC.B   #0x8, &0x20b
     68          P2SEL1 &= ~SW2; // SW2 Operation
   \   000030   F2C20D02     BIC.B   #0x8, &0x20d
     69          P2DIR &= ~SW2; // Direction = input
   \   000034   F2C20502     BIC.B   #0x8, &0x205
     70          P2OUT |= SW2; // Configure pullup resistor
   \   000038   F2D20302     BIS.B   #0x8, &0x203
     71          P2REN |= SW2; // Enable pullup resistor
   \   00003C   F2D20702     BIS.B   #0x8, &0x207
     72           P2IES |= SW2; // P2.0 Hi/Lo edge interrupt
   \   000040   F2D21902     BIS.B   #0x8, &0x219
     73           P2IFG &= ~SW2; // Clear all P2.6 interrupt flags
   \   000044   F2C21D02     BIC.B   #0x8, &0x21d
     74           P2IE |= SW2; // P2.6 interrupt enabled
   \   000048   F2D21B02     BIS.B   #0x8, &0x21b
     75          
     76          P2SEL0 &= ~P2_4; // P2_4 GPIO operation
   \   00004C   F2C010000B02 BIC.B   #0x10, &0x20b
     77          P2SEL1 &= ~P2_4; // P2_4 GPIO operation
   \   000052   F2C010000D02 BIC.B   #0x10, &0x20d
     78          P2DIR &= ~P2_4; // Direction = input
   \   000058   F2C010000502 BIC.B   #0x10, &0x205
     79          
     80          P2SEL0 &= ~P2_5; // P2_5 GPIO operation
   \   00005E   F2C020000B02 BIC.B   #0x20, &0x20b
     81          P2SEL1 &= ~P2_5; // P2_5 GPIO operation
   \   000064   F2C020000D02 BIC.B   #0x20, &0x20d
     82          P2DIR &= ~P2_5; // Direction = input
   \   00006A   F2C020000502 BIC.B   #0x20, &0x205
     83          
     84          P2SEL0 &= ~LFXOUT; // LFXOUT Clock operation
   \   000070   F2C040000B02 BIC.B   #0x40, &0x20b
     85          P2SEL1 |= LFXOUT; // LFXOUT Clock operation
   \   000076   F2D040000D02 BIS.B   #0x40, &0x20d
     86          
     87          P2SEL0 &= ~LFXIN; // LFXIN Clock operation
   \   00007C   F2C080000B02 BIC.B   #0x80, &0x20b
     88          P2SEL1 |= LFXIN; // LFXIN Clock operation
   \   000082   F2D080000D02 BIS.B   #0x80, &0x20d
     89          
     90          }
   \   000088   1001         RETA
   \   00008A                REQUIRE _A_PADIR_L
   \   00008A                REQUIRE _A_PAOUT_L
   \   00008A                REQUIRE _A_PASEL0_L
   \   00008A                REQUIRE _A_PASEL1_L
   \   00008A                REQUIRE _A_PAREN_L
   \   00008A                REQUIRE _A_PAIES_L
   \   00008A                REQUIRE _A_PAIFG_L
   \   00008A                REQUIRE _A_PAIE_L
     91          //===========================================================
     92          //===========================================================

   \                                 In  segment CODE, align 2
     93          void Init_Port3(int x){
   \                     Init_Port3:
     94            P3DIR = def_out; // Set P1 direction to output 
   \   000000   F2432402     MOV.B   #0xff, &0x224
     95            P3OUT = def_low; // P1 set Low 
   \   000004   C2432202     MOV.B   #0x0, &0x222
     96            
     97            P3SEL0 &= ~TEST_PROBE;
   \   000008   D2C32A02     BIC.B   #0x1, &0x22a
     98            P3SEL1 &= ~TEST_PROBE;
   \   00000C   D2C32C02     BIC.B   #0x1, &0x22c
     99            P3DIR  |= TEST_PROBE; 
   \   000010   D2D32402     BIS.B   #0x1, &0x224
    100              
    101            P3SEL0 |= CHECK_BAT; 
   \   000014   E2D32A02     BIS.B   #0x2, &0x22a
    102            P3SEL1 |= CHECK_BAT; 
   \   000018   E2D32C02     BIS.B   #0x2, &0x22c
    103            
    104            P3SEL0 |= OA2N; 
   \   00001C   E2D22A02     BIS.B   #0x4, &0x22a
    105            P3SEL1 |= OA2N;
   \   000020   E2D22C02     BIS.B   #0x4, &0x22c
    106            
    107            P3SEL0 |= OA2P; 
   \   000024   F2D22A02     BIS.B   #0x8, &0x22a
    108            P3SEL1 |= OA2P;
   \   000028   F2D22C02     BIS.B   #0x8, &0x22c
    109            
    110            if(x == USE_SMCLK){
   \   00002C   1C93         CMP.W   #0x1, R12
   \   00002E   0A20         JNE     ??Init_Port3_1
    111            P3SEL0 |= SMCLK_OUT; 
   \   000030   F2D010002A02 BIS.B   #0x10, &0x22a
    112            P3SEL1 &= ~SMCLK_OUT;
   \   000036   F2C010002C02 BIC.B   #0x10, &0x22c
    113            P3DIR  |= SMCLK_OUT; 
   \   00003C   F2D010002402 BIS.B   #0x10, &0x224
   \   000042   093C         JMP     ??Init_Port3_0
    114            }else{
    115              P3SEL0 &= ~SMCLK_OUT; 
   \                     ??Init_Port3_1:
   \   000044   F2C010002A02 BIC.B   #0x10, &0x22a
    116            P3SEL1 &= ~SMCLK_OUT;
   \   00004A   F2C010002C02 BIC.B   #0x10, &0x22c
    117            P3DIR  |= SMCLK_OUT; 
   \   000050   F2D010002402 BIS.B   #0x10, &0x224
    118            }
    119            P3SEL0 &= ~IR_LED;
   \                     ??Init_Port3_0:
   \   000056   F2C020002A02 BIC.B   #0x20, &0x22a
    120            P3SEL1 &= ~IR_LED; 
   \   00005C   F2C020002C02 BIC.B   #0x20, &0x22c
    121            P3DIR  |= IR_LED; 
   \   000062   F2D020002402 BIS.B   #0x20, &0x224
    122            P3OUT |= IR_LED;
   \   000068   F2D020002202 BIS.B   #0x20, &0x222
    123            
    124            P3SEL0 &= ~IOT_LINK;
   \   00006E   F2C040002A02 BIC.B   #0x40, &0x22a
    125            P3SEL1 &= ~IOT_LINK;
   \   000074   F2C040002C02 BIC.B   #0x40, &0x22c
    126            P3DIR  &= ~IOT_LINK;
   \   00007A   F2C040002402 BIC.B   #0x40, &0x224
    127            
    128            P3SEL0 &= ~P3_7;
   \   000080   F2C080002A02 BIC.B   #0x80, &0x22a
    129            P3SEL1 &= ~P3_7;
   \   000086   F2C080002C02 BIC.B   #0x80, &0x22c
    130            P3DIR  &= ~P3_7; 
   \   00008C   F2C080002402 BIC.B   #0x80, &0x224
    131            
    132          }
   \   000092   1001         RETA
   \   000094                REQUIRE _A_PBDIR_L
   \   000094                REQUIRE _A_PBOUT_L
   \   000094                REQUIRE _A_PBSEL0_L
   \   000094                REQUIRE _A_PBSEL1_L
    133          
    134          
    135          //==============================================================================
    136          //==============================================================================
    137          

   \                                 In  segment CODE, align 2
    138          void Init_Port4(void){
   \                     Init_Port4:
    139          //------------------------------------------------------------------------------
    140          // Configure PORT 4
    141          P4DIR = def_out; // Set P1 direction to oitput
   \   000000   F2432502     MOV.B   #0xff, &0x225
    142          P4OUT = def_low; // P1 set Low
   \   000004   C2432302     MOV.B   #0x0, &0x223
    143          
    144          P4SEL0 &= ~RESET_LCD; // RESET_LCD GPIO operation
   \   000008   D2C32B02     BIC.B   #0x1, &0x22b
    145          P4SEL1 &= ~RESET_LCD; // RESET_LCD GPIO operation
   \   00000C   D2C32D02     BIC.B   #0x1, &0x22d
    146          P4DIR |= RESET_LCD; // Set RESET_LCD direction to output
   \   000010   D2D32502     BIS.B   #0x1, &0x225
    147          P4OUT |= RESET_LCD; // Set RESET_LCD Off [High]
   \   000014   D2D32302     BIS.B   #0x1, &0x223
    148          
    149          P4SEL0 &= ~SW1; // SW1 GPIO operation
   \   000018   E2C32B02     BIC.B   #0x2, &0x22b
    150          P4SEL1 &= ~SW1; // SW1 GPIO operation
   \   00001C   E2C32D02     BIC.B   #0x2, &0x22d
    151          P4DIR &= ~SW1; // Direction = input
   \   000020   E2C32502     BIC.B   #0x2, &0x225
    152          P4OUT |= SW1; // Configure pullup resistor
   \   000024   E2D32302     BIS.B   #0x2, &0x223
    153          P4REN |= SW1; // Enable pullup resistor
   \   000028   E2D32702     BIS.B   #0x2, &0x227
    154          P4IES |= SW1; // P2.0 Hi/Lo edge interrupt
   \   00002C   E2D33902     BIS.B   #0x2, &0x239
    155          P4IFG &= ~SW1; // Clear all P2.6 interrupt flags
   \   000030   E2C33D02     BIC.B   #0x2, &0x23d
    156          P4IE |= SW1; // P2.6 interrupt enabled
   \   000034   E2D33B02     BIS.B   #0x2, &0x23b
    157          
    158          P4SEL0 |= UCA1TXD; // USCI_A1 UART operation
   \   000038   F2D22B02     BIS.B   #0x8, &0x22b
    159          P4SEL1 &= ~UCA1TXD; // USCI_A1 UART operation
   \   00003C   F2C22D02     BIC.B   #0x8, &0x22d
    160          
    161          P4SEL0 |= UCA1RXD; // USCI_A1 UART operation
   \   000040   E2D22B02     BIS.B   #0x4, &0x22b
    162          P4SEL1 &= ~UCA1RXD; // USCI_A1 UART operation
   \   000044   E2C22D02     BIC.B   #0x4, &0x22d
    163          
    164          P4SEL0 &= ~UCB1_CS_LCD; // UCB1_CS_LCD GPIO operation
   \   000048   F2C010002B02 BIC.B   #0x10, &0x22b
    165          P4SEL1 &= ~UCB1_CS_LCD; // UCB1_CS_LCD GPIO operation
   \   00004E   F2C010002D02 BIC.B   #0x10, &0x22d
    166          P4DIR |= UCB1_CS_LCD; // Set SPI_CS_LCD direction to output
   \   000054   F2D010002502 BIS.B   #0x10, &0x225
    167          P4OUT |= UCB1_CS_LCD; // Set SPI_CS_LCD Off [High]
   \   00005A   F2D010002302 BIS.B   #0x10, &0x223
    168          
    169          P4SEL0 |= UCB1CLK; // UCB1CLK SPI BUS operation
   \   000060   F2D020002B02 BIS.B   #0x20, &0x22b
    170          P4SEL1 &= ~UCB1CLK; // UCB1CLK SPI BUS operation
   \   000066   F2C020002D02 BIC.B   #0x20, &0x22d
    171          
    172          P4SEL0 |= UCB1SIMO; // UCB1SIMO SPI BUS operation
   \   00006C   F2D040002B02 BIS.B   #0x40, &0x22b
    173          P4SEL1 &= ~UCB1SIMO; // UCB1SIMO SPI BUS operation
   \   000072   F2C040002D02 BIC.B   #0x40, &0x22d
    174          
    175          P4SEL0 |= UCB1SOMI; // UCB1SOMI SPI BUS operation
   \   000078   F2D080002B02 BIS.B   #0x80, &0x22b
    176          P4SEL1 &= ~UCB1SOMI; // UCB1SOMI SPI BUS operation
   \   00007E   F2C080002D02 BIC.B   #0x80, &0x22d
    177          
    178          }
   \   000084   1001         RETA
   \   000086                REQUIRE _A_PBDIR_L
   \   000086                REQUIRE _A_PBOUT_L
   \   000086                REQUIRE _A_PBSEL0_L
   \   000086                REQUIRE _A_PBSEL1_L
   \   000086                REQUIRE _A_PBREN_L
   \   000086                REQUIRE _A_PBIES_L
   \   000086                REQUIRE _A_PBIFG_L
   \   000086                REQUIRE _A_PBIE_L
    179          
    180          //=============================================================================
    181          //=============================================================================

   \                                 In  segment CODE, align 2
    182          void Init_Port5(void){
   \                     Init_Port5:
    183            P5DIR = def_out; // Set P1 direction to output 
   \   000000   F2434402     MOV.B   #0xff, &0x244
    184            P5OUT = def_low; // P1 set Low 
   \   000004   C2434202     MOV.B   #0x0, &0x242
    185            
    186            P5SEL0 &= ~IOT_RESET; 
   \   000008   D2C34A02     BIC.B   #0x1, &0x24a
    187            P5SEL1 &= ~IOT_RESET;
   \   00000C   D2C34C02     BIC.B   #0x1, &0x24c
    188            P5DIR  &= ~IOT_RESET; 
   \   000010   D2C34402     BIC.B   #0x1, &0x244
    189            
    190            P5SEL0 &= ~V_BAT; 
   \   000014   E2C34A02     BIC.B   #0x2, &0x24a
    191            P5SEL1 &= ~V_BAT;
   \   000018   E2C34C02     BIC.B   #0x2, &0x24c
    192            P5DIR  &= ~V_BAT;
   \   00001C   E2C34402     BIC.B   #0x2, &0x244
    193            
    194            P5SEL0 &= ~IOT_PROGRAM_SELECT; 
   \   000020   E2C24A02     BIC.B   #0x4, &0x24a
    195            P5SEL1 &= ~IOT_PROGRAM_SELECT; 
   \   000024   E2C24C02     BIC.B   #0x4, &0x24c
    196            P5DIR  &= ~IOT_PROGRAM_SELECT; 
   \   000028   E2C24402     BIC.B   #0x4, &0x244
    197            
    198            P5SEL0 &= ~V_33; 
   \   00002C   F2C24A02     BIC.B   #0x8, &0x24a
    199            P5SEL1 &= ~V_33;
   \   000030   F2C24C02     BIC.B   #0x8, &0x24c
    200            P5DIR  &= ~V_33; 
   \   000034   F2C24402     BIC.B   #0x8, &0x244
    201            
    202            P5SEL0 &= ~IOT_PROGRAM_MODE; 
   \   000038   F2C010004A02 BIC.B   #0x10, &0x24a
    203            P5SEL1 &= ~IOT_PROGRAM_MODE;
   \   00003E   F2C010004C02 BIC.B   #0x10, &0x24c
    204            P5DIR  &= ~IOT_PROGRAM_MODE;
   \   000044   F2C010004402 BIC.B   #0x10, &0x244
    205            
    206          }
   \   00004A   1001         RETA
   \   00004C                REQUIRE _A_PCDIR_L
   \   00004C                REQUIRE _A_PCOUT_L
   \   00004C                REQUIRE _A_PCSEL0_L
   \   00004C                REQUIRE _A_PCSEL1_L
    207          
    208          //=============================================================================
    209          //=============================================================================

   \                                 In  segment CODE, align 2
    210          void Init_Port6(void){
   \                     Init_Port6:
    211            P6DIR = def_out; // Set P1 direction to output 
   \   000000   F2434502     MOV.B   #0xff, &0x245
    212            P6OUT = def_low; // P1 set Low 
   \   000004   C2434302     MOV.B   #0x0, &0x243
    213            
    214            P6SEL0 |= R_FORWARD;
   \   000008   D2D34B02     BIS.B   #0x1, &0x24b
    215            P6SEL1 &= ~R_FORWARD; 
   \   00000C   D2C34D02     BIC.B   #0x1, &0x24d
    216            P6DIR  |= R_FORWARD; 
   \   000010   D2D34502     BIS.B   #0x1, &0x245
    217             
    218              
    219            P6SEL0 |= L_FORWARD;
   \   000014   E2D34B02     BIS.B   #0x2, &0x24b
    220            P6SEL1 &= ~L_FORWARD; 
   \   000018   E2C34D02     BIC.B   #0x2, &0x24d
    221            P6DIR  |= L_FORWARD; 
   \   00001C   E2D34502     BIS.B   #0x2, &0x245
    222           
    223            
    224            P6SEL0 |= R_REVERSE;
   \   000020   E2D24B02     BIS.B   #0x4, &0x24b
    225            P6SEL1 &= ~R_REVERSE; 
   \   000024   E2C24D02     BIC.B   #0x4, &0x24d
    226            P6DIR  |= R_REVERSE; 
   \   000028   E2D24502     BIS.B   #0x4, &0x245
    227            
    228            P6SEL0 |= L_REVERSE;
   \   00002C   F2D24B02     BIS.B   #0x8, &0x24b
    229            P6SEL1 &= ~L_REVERSE; 
   \   000030   F2C24D02     BIC.B   #0x8, &0x24d
    230            P6DIR  |= L_REVERSE; 
   \   000034   F2D24502     BIS.B   #0x8, &0x245
    231            
    232            P6SEL0 &= ~LCD_BACKLITE;
   \   000038   F2C010004B02 BIC.B   #0x10, &0x24b
    233            P6SEL1 &= ~LCD_BACKLITE;
   \   00003E   F2C010004D02 BIC.B   #0x10, &0x24d
    234            P6DIR  |= LCD_BACKLITE;
   \   000044   F2D010004502 BIS.B   #0x10, &0x245
    235            P6OUT &= ~LCD_BACKLITE; 
   \   00004A   F2C010004302 BIC.B   #0x10, &0x243
    236            
    237            P6SEL0 &= ~P6_5;
   \   000050   F2C020004B02 BIC.B   #0x20, &0x24b
    238            P6SEL1 &= ~P6_5; 
   \   000056   F2C020004D02 BIC.B   #0x20, &0x24d
    239            
    240            P6SEL0 &= ~GRN_LED;
   \   00005C   F2C040004B02 BIC.B   #0x40, &0x24b
    241            P6SEL1 &= ~GRN_LED;
   \   000062   F2C040004D02 BIC.B   #0x40, &0x24d
    242            P6DIR  |= GRN_LED;
   \   000068   F2D040004502 BIS.B   #0x40, &0x245
    243            
    244            
    245            
    246          }
   \   00006E   1001         RETA
   \   000070                REQUIRE _A_PCDIR_L
   \   000070                REQUIRE _A_PCOUT_L
   \   000070                REQUIRE _A_PCSEL0_L
   \   000070                REQUIRE _A_PCSEL1_L
    247          
    248          

   Maximum stack usage in bytes:

   CSTACK Function
   ------ --------
      4   Init_Port1
      4   Init_Port2
      4   Init_Port3
      4   Init_Port4
      4   Init_Port5
      4   Init_Port6
      4   Init_Ports
        4   -> Init_Port1
        4   -> Init_Port2
        4   -> Init_Port3
        4   -> Init_Port4
        4   -> Init_Port5
        0   -> Init_Port6


   Segment part sizes:

   Bytes  Function/Label
   -----  --------------
      94  Init_Port1
     138  Init_Port2
     148  Init_Port3
     134  Init_Port4
      76  Init_Port5
     112  Init_Port6
      26  Init_Ports
       2  _A_PADIR_L
       2  _A_PAIES_L
       2  _A_PAIE_L
       2  _A_PAIFG_L
       2  _A_PAOUT_L
       2  _A_PAREN_L
       2  _A_PASEL0_L
       2  _A_PASEL1_L
       2  _A_PBDIR_L
       2  _A_PBIES_L
       2  _A_PBIE_L
       2  _A_PBIFG_L
       2  _A_PBOUT_L
       2  _A_PBREN_L
       2  _A_PBSEL0_L
       2  _A_PBSEL1_L
       2  _A_PCDIR_L
       2  _A_PCOUT_L
       2  _A_PCSEL0_L
       2  _A_PCSEL1_L

 
 728 bytes in segment CODE
  40 bytes in segment DATA16_AN
 
 728 bytes of CODE memory
   0 bytes of DATA memory (+ 40 bytes shared)

Errors: none
Warnings: none
